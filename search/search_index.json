{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to                             schemas.science","text":""},{"location":"#what-is-schemasscience","title":"What is schemas.science?","text":"<p>schemas.science is a community effort which aims at improving the Findability on the Web of scientific research data, products and resources. It does this by encouraging the use of Schema.org markup in their websites so that they are indexable by search engines and other services. schemas.science encourages the consistent use of markup tailored for diverse scientific domains. This structured information then makes it easier to discover, collate, analyse and consume distributed resources.</p>"},{"location":"#cross-domain-schemas","title":"Cross domain schemas","text":"Name Description FormalParameter Bioschemas specification for describing a formal parameter in the Life Sciences. Version: 1.0-RELEASE (09 March 2021) ComputationalTool The Life Science Tools specification provides a way to describe bioscience tools and software on the World Wide Web. It defines a set of metadata and vocabularies, built on top of existing technologies and standards, that can be used to represent such tools in Web pages and applications. The goal of the specification is to make it easier to discover. Version 1.0-RELEASE.Summary of Changes <p>Changes since the 0.6-DRAFT</p> <ul> <li>additionalType property deprecated and replaced by applicationCategory.</li><li>example added for the name property.</li></ul> ComputationalWorkflow A computational workflow consists of an orchestrated and repeatable pattern of activity enabled by the systematic organization of resources into processes that transform materials, provide services, or process information (source Wikipedia.org). It is executed by a computational process and is thus distinct from laboratory or business workflows. version 1.0-RELEASE DataCatalog A guide for how to describe data catalogs/repositories in the life-sciences using Schema.org-like annotation. Version 0.3-RELEASE-2019_07_01 Dataset A guide for how to describe datasets in the life-sciences using Schema.org-like annotation. Version 1.0-RELEASE. Summary of Changes Key changes since 0.3-RELEASE:<ul><li>Updated properties to Schema.org v12.0; various properties added at recommended or optional level, expected types updated. See 0.4-DRAFT for full details</li><li>license now a minimum property</li><li>keywords: Cardinality #501 \u2013 Cardinality is MANY</li><li>distribution: Cardinality #574 \u2013 Cardinality changed to MANY</li><li>datePublished: Increased marginlity #576 \u2013 Now recommended</li><li>publisher: Increased marginlity, Cardinality #576 \u2013 Now recommended with MANY cardinality</li></ul> Course Specification describing a course.  This specification must be used in tandem with a courseInstance. A course is used to describe the broad, common aspects of a recurring training event - whereas a course instance is about the specific times and location of when that course is held. Summary of Changes    No changes since 0.10-DRAFT of the Course profile.  Version: 1.0-RELEASE (13 September 2022) CourseInstance Specification describing the instance of a course.  This specification can be used in tandem with a Course. A course is used to describe the broad, common aspects of a recurring training event - whereas a course instance is about the specific times and location of when that course is held. Summary of Changes    No changes since 0.9-DRAFT of the CourseInstance profile. Version: 1.0-RELEASE (13 September 2022)"},{"location":"profiles/ComputationalTool/","title":"ComputationalTool profile","text":""},{"location":"profiles/ComputationalTool/#description","title":"Description","text":"<p>The Life Science Tools specification provides a way to describe bioscience tools and software on the World Wide Web. It defines a set of metadata and vocabularies, built on top of existing technologies and standards, that can be used to represent such tools in Web pages and applications. The goal of the specification is to make it easier to discover. Version 1.0-RELEASE.Summary of Changes <p>Changes since the 0.6-DRAFT</p> <ul> <li>additionalType property deprecated and replaced by applicationCategory.</li><li>example added for the name property.</li></ul></p>"},{"location":"profiles/ComputationalTool/#minimum-properties","title":"Minimum properties","text":"Name Description Cardinality description A short description of the tool. one name The name of the item. one url Homepage of the tool. URL of the item. one conformsTo This is used to state the Bioschemas profile that the markup relates to. The identifier can be the url for the version of this bioschemas class on github: https://github.com/BioSchemas/specifications/blob/master/ComputationalTool/jsonld/ComputationalTool_v1.0-RELEASE.json one"},{"location":"profiles/ComputationalTool/#recommended-properties","title":"Recommended properties","text":"Name Description Cardinality applicationSubCategory Subcategory of the application, e.g. 'Arcade Game'. Use an EDAM:Topic to describe the category of application many applicationCategory Type of software application, e.g. 'Game, Multimedia'. Please use terms from the 'Tool type' table in the biotools documentation. many softwareVersion Version(s) of the tool, which this information is valid for. Can also be a comma-delimited list and include hyphen-separated ranges of versions. many featureList Features or modules provided by this application (and possibly required by other applications). Functionality provided by the tool. Note: Bioschemas have removed Text from the Expected Types. many author The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably. many citation Publication about this tool. A citation or reference to another creative work, such as another publication, web page, scholarly article, etc. many license The license of a software, curated dataset, etc. A license document that applies to this content, typically indicated by URL. Use SPDX list of licenses in form https://spdx.org/licenses/ many"},{"location":"profiles/ComputationalTool/#optional-properties","title":"Optional properties","text":"Name Description Cardinality codeRepository Link to the source code repository of the tool. many input Specification of a consumed input. many output Specification of a produced output. many programmingLanguage The main programming language(s) used to build or execute the tool. Please use terms from the \u2018Programming language\u2019 table in the Bio.Tools documentation many downloadUrl Link(s) to the downloadable(s). many applicationSuite A suite of tools, to which the tool belongs. The name of the application suite to which the application belongs (e.g. Excel belongs to Office). many softwareHelp A documentation of the tool. many softwareAddOn Additional sub-tools (add-ons, plug-ins, tools in a suite, etc.) that are included in the tool or workflow. Additional content for a software application. many operatingSystem Operating systems on which the tool can be used (without additional wrapping). Operating systems supported (Windows 7, OSX 10.6, Android 1.6). Please use terms from the \u2018Operating systems\u2019 table in the biotools documentation many identifier The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details. many contributor A secondary contributor to the CreativeWork or Event. many discussionUrl A link to the page containing the comments of the CreativeWork. many funder A person or organization that supports (sponsors) something through some kind of financial contribution. many hasPart Indicates any software dependency. Indicates an item or CreativeWork that is part of this item, or CreativeWork (in some sense). many isAccessibleForFree A flag to signal that the tool or the service are available to be used for free. one isBasedOn A tool or another work which this tool is based on, or is an extension, distribution, or deployment of.  A resource from which this work is derived or from which it is a modification or adaption. many isPartOf A collection, other than a suite of tools, to which the tool belongs.. Indicates an item or CreativeWork that this item, or CreativeWork (in some sense), is part of. many keywords Additional keywords or tags important for this tool. Multiple entries are delimited by commas. Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas. many provider The provider organization of a web application, database portal, web service, etc. Note: Bioschemas have removed Person from the Expected Types. The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller. many thumbnailUrl A small image representing the tool, such as an icon. A thumbnail image relevant to the Thing. one"},{"location":"profiles/ComputationalWorkflow/","title":"ComputationalWorkflow profile","text":""},{"location":"profiles/ComputationalWorkflow/#description","title":"Description","text":"<p>A computational workflow consists of an orchestrated and repeatable pattern of activity enabled by the systematic organization of resources into processes that transform materials, provide services, or process information (source Wikipedia.org). It is executed by a computational process and is thus distinct from laboratory or business workflows. version 1.0-RELEASE</p>"},{"location":"profiles/ComputationalWorkflow/#minimum-properties","title":"Minimum properties","text":"Name Description Cardinality input An input required to use the computational workflow (eg. Excel spreadsheet, BAM file) many output An output produced by the workflow many programmingLanguage The computer programming language. many name The name of the item. one url URL of the item. one creator The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork. many dateCreated The date on which the CreativeWork was created or the item was added to a DataFeed. one license A license document that applies to this content, typically indicated by URL. many sdPublisher Indicates the party responsible for generating and publishing the current structured data markup, typically in cases where the structured data is derived automatically from existing published content but published on a different site. For example, student projects and open data initiatives often re-publish existing content with more explicitly structured metadata. The sdPublisher property helps make such practices more explicit. many version The version of the CreativeWork embodied by a specified resource. one conformsTo This is used to state the Bioschemas profile that the markup relates to. The identifier can be the url for the version of this bioschemas class on github: https://github.com/BioSchemas/specifications/blob/master/ComputationalWorkflow/jsonld/ComputationalWorkflow_v1.0-RELEASE.json one"},{"location":"profiles/ComputationalWorkflow/#recommended-properties","title":"Recommended properties","text":"Name Description Cardinality creativeWorkStatus The status of a creative work in terms of its stage in a lifecycle. Example terms include Incomplete, Draft, Published, Obsolete. Some organizations define a set of terms for the stages of their publication lifecycle. many documentation Documentation describing the ComputationalWorkflow and its use. many funding The funding for the workflow many maintainer maintainer of a Dataset, software package (SoftwareApplication), or other Project. A maintainer is a Person or Organization that manages contributions to, and/or publication of, some (typically complex) artifact. It is common for distributions of software and data to be based on \u201cupstream\u201d sources. When maintainer is applied to a specific version of something e.g. a particular version or packaging of a Dataset, it is always possible that the upstream source has a different maintainer. The isBasedOn property can be used to indicate such relationships between datasets to make the different maintenance roles clear. Similarly in the case of software, a package may have dedicated maintainers working on integration into software distributions such as Ubuntu, as well as upstream maintainers of the underlying work. many softwareRequirements Renaming schema.org/requirements as softwareRequirements. Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime). Supersedes requirements. many targetProduct Target Operating System / Product to which the code applies.  If applies to several versions, just the product name can be used. many runtimePlatform Runtime platform or script interpreter dependencies (Example - Java v1, Python2.3, .Net Framework 3.0). many description A description of the item. one citation A citation or reference to another creative work, such as another publication, web page, scholarly article, etc. many contributor A secondary contributor to the CreativeWork or Event. many hasPart Indicates an item or CreativeWork that is part of this item, or CreativeWork (in some sense). many isBasedOn A resource from which this work is derived or from which it is a modification or adaption. one keywords Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas. many producer The person or organization who produced the work (e.g. music album, movie, tv/radio series etc.). many publisher The publisher of the creative work. many"},{"location":"profiles/ComputationalWorkflow/#optional-properties","title":"Optional properties","text":"Name Description Cardinality conditionsOfAccess Conditions that affect the availability of, or method(s) of access to, an item. Typically used for real world items such as an ArchiveComponent held by an ArchiveOrganization. This property is not suitable for use as a general Web access control mechanism. It is expressed only in natural language.  For example \u201cAvailable by appointment from the Reading Room\u201d or \u201cAccessible only from logged-in accounts \u201c. one alternateName An alias for the item. many identifier The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details. many image An image of the item. This can be a URL or a fully described ImageObject. many dateModified The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed. one datePublished Date of first broadcast/publication. one encodingFormat Media type typically expressed using a MIME format (see IANA site and MDN reference) e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.).  In cases where a CreativeWork has several media type representations, encoding can be used to indicate each MediaObject alongside particular encodingFormat information.  Unregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry. many"},{"location":"profiles/Course/","title":"Course profile","text":""},{"location":"profiles/Course/#description","title":"Description","text":"<p>Specification describing a course.  This specification must be used in tandem with a courseInstance. A course is used to describe the broad, common aspects of a recurring training event - whereas a course instance is about the specific times and location of when that course is held. Summary of Changes    No changes since 0.10-DRAFT of the Course profile.  Version: 1.0-RELEASE (13 September 2022) </p>"},{"location":"profiles/Course/#minimum-properties","title":"Minimum properties","text":"Name Description Cardinality description A description of the item. one keywords Free text keywords delimited by commas describing the Course content. Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas. one name The name of the item. one conformsTo This is used to state the Bioschemas profile that the markup relates to. The identifier can be the url for the version of this bioschemas class on github: https://github.com/BioSchemas/specifications/blob/master/Course/jsonld/Course_v1.0-RELEASE.json one"},{"location":"profiles/Course/#recommended-properties","title":"Recommended properties","text":"Name Description Cardinality about The subject of this Course.  Use the DefinedTerm type to add a controlled vocabulary term to categorise the course (such as using the EDAM Topic ontology). The subject matter of the content. Inverse property: subjectOf. many abstract An abstract is a short description that summarizes a Course An abstract is a short description that summarizes a CreativeWork one aggregateRating The overall rating, based on a collection of reviews or ratings, of the item. one citation A citation or reference to another creative work, such as another publication, web page, scholarly article, etc. many coursePrerequisites Requirements for taking the Course. May be completion of another Course or a textual description like \"permission of instructor\". Requirements may be a pre-requisite competency, referenced using AlignmentObject. many educationalLevel The level expected to be able to participate in the course. Examples of educational levels include 'beginner', 'intermediate' or 'advanced'. The level in terms of progression through an educational or training context. Examples of educational levels include 'beginner', 'intermediate' or 'advanced', and formal sets of level indicators. one hasCourseInstance A course may be ran multiple times in different locations or at different times. Use hasCourseInstance to list the offerings of this Course.  Please see the Course Instance specification for the full list of properties. An offering of the course at a specific time and place or through specific media or mode of study or to a specific section of students. many license If the Course has an open-source license, include the short URL, as found in OSI. Otherwise use CreativeWork to describe your custom license. A license document that applies to this content, typically indicated by URL. one mentions Datasets, tools, technologies, entities etc, which are actively used by and/or referred to by this course.  If this varies in a CourseInstance, use the CourseInstance version of mentions to override this mentions. Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept. many provider The organization responsible for providing the educational input for the course, e.g. content, assessments, accreditation etc. Note: providing a course goes beyond creating it as it implies some degree of academic responsibility for accrediting the content of the course, perhaps running assessments etc. The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller. Supersedes carrier. many teaches Statements that describe what knowledge, skills or abilities students should acquire on completion of this Course The item being described is intended to help a person learn the competency or learning outcome defined by the referenced term. many timeRequired Approximate or typical time it takes to work through this learning resource for the typical intended target audience, e.g. 'P30M', 'P1H25M'. This should use the ISO 8601 duration format.   If this varies in a CourseInstance, use duration in CourseInstance to override timeRequired. Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience, e.g. 'P30M', 'P1H25M'. one url The preferred URL of the course page. You must provide this value if it is known. URL of the item. one"},{"location":"profiles/Course/#optional-properties","title":"Optional properties","text":"Name Description Cardinality accessibilitySummary A human-readable summary of specific accessibility features or deficiencies within the course. A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as \"short descriptions are present but long descriptions will be needed for non-visual users\" or \"short descriptions are present and no long descriptions are needed.\" one alternateName An alias for the item. many audience The type of audience intended for your course. A succinct description of the attendees.  An intended audience, i.e. a group for whom something was created. Supersedes serviceAudience. many comment Comments, typically from users. many commentCount The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere. one courseCode The identifier for the Course used by the course provider (e.g. CS101 or 6.001). many creator The creator/author of the course. Note, this may be different from the instructor who delivers it (descibed in CourseInstance), or the author who created the training materials used. The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork. many dateCreated The date on which the CreativeWork was created or the item was added to a DataFeed. one dateModified The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed. many educationalCredentialAwarded Strongly recommended if exists. A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course. A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course. one hasPart A training material used in a course such as an exercise, handouts, or slides.   Inverse property: isPartOf.  If this varies in a CourseInstance, use workFeatutred to override this property value.  Indicates an item or CreativeWork that is part of this item, or CreativeWork (in some sense). Inverse property: isPartOf. many image An image of the item. This can be a URL or a fully described ImageObject. one isBasedOn A course, book or other resource on which this Course is based. A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html. Supersedes isBasedOnUrl. many thumbnailUrl A thumbnail image relevant to the Thing. one"},{"location":"profiles/CourseInstance/","title":"CourseInstance profile","text":""},{"location":"profiles/CourseInstance/#description","title":"Description","text":"<p>Specification describing the instance of a course.  This specification can be used in tandem with a Course. A course is used to describe the broad, common aspects of a recurring training event - whereas a course instance is about the specific times and location of when that course is held. Summary of Changes    No changes since 0.9-DRAFT of the CourseInstance profile. Version: 1.0-RELEASE (13 September 2022)</p>"},{"location":"profiles/CourseInstance/#minimum-properties","title":"Minimum properties","text":"Name Description Cardinality courseMode The medium or means of delivery of the course instance or the mode of study, either as a text label (e.g. 'online', 'onsite' or 'blended'; 'synchronous' or 'asynchronous'; 'full-time' or 'part-time') or as a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous ).   The medium, means or pace of delivery of the course instance or the mode of study, either as a text label (e.g. 'online', 'onsite', 'hybrid' or 'blended'; 'synchronous' or 'asynchronous'; 'full-time' or 'part-time') or as a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous ).   Another example of a Glossary of terms as defined by the Bioschemas Training community and published in Zenodo in 2016: https://zenodo.org/record/166378#.YrHnEi8iu-o. many location Location of the Course Instance. If the Course Instance is online, add the connection details as text The location of for example where the event is happening, an organization is located, or where an action takes place. one conformsTo This is used to state the Bioschemas profile that the markup relates to. The identifier can be the url for the version of this bioschemas class on github: https://github.com/BioSchemas/specifications/blob/master/CourseInstance/jsonld/CourseInstance_v1.0-RELEASE.json many"},{"location":"profiles/CourseInstance/#recommended-properties","title":"Recommended properties","text":"Name Description Cardinality endDate The end date and time of the item (in ISO 8601 date format). one inLanguage The language of the content or performance or used in an action. Please use one of the language codes from the IETF BCP 47 standard. See also availableLanguage. Supersedes language. one instructor An instructor can be the main teacher or trainer, as well as a training assistant, or a helper. A person assigned to instruct or provide instructional assistance for the CourseInstance. many offers An offer to provide this item\u2014for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event. Use businessFunction to indicate the kind of transaction offered, i.e. sell, lease, etc. This property can also be used to describe a Demand. While this property is listed as expected on a number of common types, it can be used in others. In that case, using a second type, such as Product or a subtype of Product, can clarify the nature of the offer. Inverse property: itemOffered.   Bioschemas: The price an attendee would pay to attend this CourseInstance. The price currency can be for instance in 'GBP' (pound sterling) or 'CHF' (Swiss francs). many startDate The start date and time of the item (in ISO 8601 date format). one url The preferred URL of this course instance. You must provide this value if it is known URL of the item. one"},{"location":"profiles/CourseInstance/#optional-properties","title":"Optional properties","text":"Name Description Cardinality alternateName An alias for the item. many contributor Contributors are those who made non-authorship contributions: e.g., critical review, commentary or revision. A secondary contributor to the CreativeWork or Event. many description A description of the Course Instance.   (courseInstance) description can be used to override (course) description for specific course instances. A description of the item. one duration (CourseInstance) duration can be used to override (Course) duration for specific course instances. The duration of the item (movie, audio recording, event, etc.) in ISO 8601 date format. one eventStatus An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled.   An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled. Used as text label (e.g. 'postponed', 'cancelled', 'date TBC', 'application open' or 'registration closed'). one funder A person or organization that supports (sponsors) something through some kind of financial contribution. many image An image of the item. This can be a URL or a fully described ImageObject. one maximumAttendeeCapacity The total number of individuals that may attend an event or venue. one name The name of the course.  Course instance name can be used to override Course name for variations in specific Course instances. Use name from Course unless the Course instance has a different name from the course. The name of the item. one organizer An organizer of an Event. many subEvent For events within events e.g. guest lecture within a workshop event An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference. Supersedes subEvents. Inverse property: superEvent. many superEvent Use to describe the event a course instance takes place within. e.g. Galaxy Workshop during the ISMB Conference.  An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent. Inverse property: subEvent. many workFeatured A work featured in some event, e.g. exhibited in an ExhibitionEvent. Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent).   The training material used in this specific course instance, or produced for this course instance. If this is the same for all Course Instances, use hasPart and/or mentions in Course instead many"},{"location":"profiles/DataCatalog/","title":"DataCatalog profile","text":""},{"location":"profiles/DataCatalog/#description","title":"Description","text":"<p>A guide for how to describe data catalogs/repositories in the life-sciences using Schema.org-like annotation. Version 0.3-RELEASE-2019_07_01</p>"},{"location":"profiles/DataCatalog/#minimum-properties","title":"Minimum properties","text":"Name Description Cardinality description A description of the item. one name The name of the item. one url URL of the item. one keywords Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas. many provider The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller. many conformsTo This is used to state the Bioschemas profile that the markup relates to. The identifier can be the url for the version of this bioschemas class on github: https://github.com/BioSchemas/specifications/blob/master/DataCatalog/jsonld/DataCatalog_v0.3-RELEASE-2019_07_01.json many"},{"location":"profiles/DataCatalog/#recommended-properties","title":"Recommended properties","text":"Name Description Cardinality dataset A dataset contained in this catalog. many alternateName An alias for the item. many identifier The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details. many about The subject matter of the content. one citation A citation or reference to another creative work, such as another publication, web page, scholarly article, etc. many dateCreated The date on which the CreativeWork was created or the item was added to a DataFeed. one license A license document that applies to this content, typically indicated by URL. one sourceOrganization The Organization on whose behalf the creator was working. many"},{"location":"profiles/DataCatalog/#optional-properties","title":"Optional properties","text":"Name Description Cardinality dateModified The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed. one encodingFormat Media type typically expressed using a MIME format (see IANA site and MDN reference) e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.).  In cases where a CreativeWork has several media type representations, encoding can be used to indicate each MediaObject alongside particular encodingFormat information.  Unregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry. many"},{"location":"profiles/Dataset/","title":"Dataset profile","text":""},{"location":"profiles/Dataset/#description","title":"Description","text":"<p>A guide for how to describe datasets in the life-sciences using Schema.org-like annotation. Version 1.0-RELEASE. Summary of Changes Key changes since 0.3-RELEASE:<ul><li>Updated properties to Schema.org v12.0; various properties added at recommended or optional level, expected types updated. See 0.4-DRAFT for full details</li><li>license now a minimum property</li><li>keywords: Cardinality #501 \u2013 Cardinality is MANY</li><li>distribution: Cardinality #574 \u2013 Cardinality changed to MANY</li><li>datePublished: Increased marginlity #576 \u2013 Now recommended</li><li>publisher: Increased marginlity, Cardinality #576 \u2013 Now recommended with MANY cardinality</li></ul></p>"},{"location":"profiles/Dataset/#minimum-properties","title":"Minimum properties","text":"Name Description Cardinality description A short summary describing a dataset. A description of the item. one identifier CURIEs that can be resolved using Identifiers.org should be used. The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details. many keywords Keywords should be drawn from a controlled vocabulary, e.g. EDAM, and supplied as a DefinedTerm list. Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas. many license A license under which the dataset is distributed. A license document that applies to this content, typically indicated by URL. one name A descriptive name of the dataset. The name of the item. one url The location of a page describing the dataset. URL of the item. one conformsTo This is used to state the Bioschemas profile that the markup relates to. The identifier can be the url for the version of this bioschemas class on github: https://github.com/BioSchemas/specifications/blob/master/Dataset/jsonld/Dataset_v1.0-RELEASE.json one"},{"location":"profiles/Dataset/#recommended-properties","title":"Recommended properties","text":"Name Description Cardinality alternateName An alias for the item. many citation A citation for a publication that describes the dataset. A citation or reference to another creative work, such as another publication, web page, scholarly article, etc. many creator The name of the dataset creator (person or organization). The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork. many datePublished Date of first broadcast/publication. one distribution A downloadable form of this dataset, at a specific location, in a specific format. many includedInDataCatalog A data catalog which contains this dataset. Supersedes includedDataCatalog, catalog. Inverse property: dataset many isBasedOn Use to link a Dataset to the Study that it was generated from. A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.  Supersedes isBasedOnUrl. many measurementTechnique A technique or technology used in a Dataset (or DataDownload, DataCatalog), corresponding to the method used for measuring the corresponding variable(s) (described using variableMeasured). This is oriented towards scientific and scholarly dataset publication but may have broader applicability; it is not intended as a full representation of measurement, but rather as a high level summary for dataset discovery.  For example, if variableMeasured is: molecule concentration, measurementTechnique could be: \"mass spectrometry\" or \"nmr spectroscopy\" or \"colorimetry\" or \"immunofluorescence\".  If the variableMeasured is \"depression rating\", the measurementTechnique could be \"Zung Scale\" or \"HAM-D\" or \"Beck Depression Inventory\".  If there are several variableMeasured properties recorded for some given data object, use a PropertyValue for each variableMeasured and attach the corresponding measurementTechnique. many variableMeasured What does the dataset measure? (e.g., temperature, pressure). The variableMeasured property can indicate (repeated as necessary) the variables that are measured in some dataset, either described as text or as pairs of identifier and description using PropertyValue. many version The version number for this dataset. The version of the CreativeWork embodied by a specified resource. one"},{"location":"profiles/Dataset/#optional-properties","title":"Optional properties","text":"Name Description Cardinality dateCreated The date on which the CreativeWork was created or the item was added to a DataFeed. one dateModified The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed. one hasPart Indicates an item or CreativeWork that is part of this item, or CreativeWork (in some sense).  Inverse property: isPartOf one isAccessibleForFree A flag to signal that the item, event, or place is accessible for free. Supersedes free. one isPartOf Indicates an item or CreativeWork that this item, or CreativeWork (in some sense), is part of. Inverse property: hasPart one maintainer A maintainer of a Dataset, software package (SoftwareApplication), or other Project. A maintainer is a Person or Organization that manages contributions to, and/or publication of, some (typically complex) artifact. It is common for distributions of software and data to be based on \"upstream\" sources. When maintainer is applied to a specific version of something e.g. a particular version or packaging of a Dataset, it is always possible that the upstream source has a different maintainer. The isBasedOn property can be used to indicate such relationships between datasets to make the different maintenance roles clear. Similarly in the case of software, a package may have dedicated maintainers working on integration into software distributions such as Ubuntu, as well as upstream maintainers of the underlying work. many publisher The publisher of the creative work. one sameAs URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website. one"},{"location":"profiles/FormalParameter/","title":"FormalParameter profile","text":""},{"location":"profiles/FormalParameter/#description","title":"Description","text":"<p>Bioschemas specification for describing a formal parameter in the Life Sciences. Version: 1.0-RELEASE (09 March 2021) </p>"},{"location":"profiles/FormalParameter/#minimum-properties","title":"Minimum properties","text":"Name Description Cardinality name The name of the item. one conformsTo This is used to state the Bioschemas profile that the markup relates to. The identifier can be the url for the version of this bioschemas class on github: https://github.com/BioSchemas/specifications/blob/master/FormalParameter/jsonld/FormalParameter_v1.0-RELEASE.json one"},{"location":"profiles/FormalParameter/#recommended-properties","title":"Recommended properties","text":"Name Description Cardinality encodingFormat URLs to accepted formats.  It is strongly recommented that this be specified. If it is not specified, then nothing should be assumed about the encoding formats of the FormalParameter. many additionalType An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally. many description A description of the item. one"},{"location":"profiles/FormalParameter/#optional-properties","title":"Optional properties","text":"Name Description Cardinality defaultValue The default value for the FormalParameter. This is commonly only used for Inputs. one valueRequired If the FormalParameter must be specified. This is commonly only used for Inputs one identifier The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details. many"}]}